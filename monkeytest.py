# -*- coding: utf-8 -*-
"""monkeyTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vieqnH1a-TrZvCHa6AiC2s0eDO33JdHP

### Importing all the libraries
"""

import os
from keras.models import Sequential
from keras.preprocessing.image import load_img, img_to_array
from keras.layers import Conv2D, MaxPool2D, Flatten, Dense, Dropout
import matplotlib.pyplot as plt

"""### Getting all the images from the folder; normalising & converting it to np.array()"""

img_dir = './Train'
img_paths = [os.path.join(img_dir, f) for f in os.listdir(img_dir) if f.endswith('.png')]

images = []
for img_path in img_paths:
    img = load_img(img_path, target_size=(32, 32))
    img = img_to_array(img)
    img /= 255.0
    images.append(img)

images = np.array(images)
labels = np.array([1 for x in range(len(images))])

"""### The DL stuff"""

from sklearn.model_selection import train_test_split
train_images, val_images, train_labels, val_labels = train_test_split(images, labels, test_size=0.2, random_state=42)

model = Sequential()
model.add(Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 3)))
model.add(MaxPool2D((2, 2)))
model.add(Flatten())
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(1, activation='sigmoid'))

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

history = model.fit(train_images, train_labels, epochs=100, batch_size=32, validation_data=(val_images, val_labels))

plt.plot(history.history['accuracy'], label='Training Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.plot(history.history['loss'], label='Training Loss')
plt.legend()
plt.show()

test_loss, test_acc = model.evaluate(train_images, train_labels)
print('Test accuracy:', test_acc)

